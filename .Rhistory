group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
View(death_prob)
## checking if the event has any 7
unique(events$event)
table(events$event)
library(epicUS)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
# settings$event_stack_size <- 0
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
## making incidence and longevity 0
input$values$agent$l_inc_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0)))
input$values$agent$ln_h_bgd_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0, age = 0, b_mi = 0, n_mi = 0, b_stroke = 0,
n_stroke = 0, hf = 0)))
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
table(events$event)
# rounding down so we can create a group.
events <- events %>%
mutate(age_and_local = floor(local_time + age_at_creation))
age_info<-events %>%
mutate(age_and_local = floor(local_time + age_at_creation)) %>%
group_by(age_and_local,female) %>%
summarise(count = n())
events_filtered<- events %>%
mutate(death= ifelse(event==13,1,0)) %>%
group_by(id) %>%
mutate(ever_death = sum(death)) %>%
filter(event==14) %>%
ungroup()
death_prob2<- events_filtered %>%
group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
View(death_prob2)
library(epicUS)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e7
# settings$event_stack_size <- 0
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
## making incidence and longevity 0
input$values$agent$l_inc_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0)))
input$values$agent$ln_h_bgd_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0, age = 0, b_mi = 0, n_mi = 0, b_stroke = 0,
n_stroke = 0, hf = 0)))
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
table(events$event)
# rounding down so we can create a group.
events <- events %>%
mutate(age_and_local = floor(age_at_creation))
age_info<-events %>%
group_by(age_and_local,female) %>%
summarise(count = n())
events_filtered<- events %>%
mutate(death= ifelse(event==13,1,0)) %>%
group_by(id) %>%
mutate(ever_death = sum(death)) %>%
filter(event==14) %>%
ungroup()
death_prob2<- events_filtered %>%
group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
View(death_prob2)
library(epicUS)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e7
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
## making incidence and longevity 0
input$values$agent$l_inc_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0)))
input$values$agent$ln_h_bgd_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0, age = 0, b_mi = 0, n_mi = 0, b_stroke = 0,
n_stroke = 0, hf = 0)))
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
table(events$event)
# rounding down so we can create a group.
events <- events %>%
mutate(age_and_local = floor(age_at_creation))
age_info<-events %>%
group_by(age_and_local,female) %>%
summarise(count = n())
events_filtered<- events %>%
mutate(death= ifelse(event==13,1,0)) %>%
group_by(id) %>%
mutate(ever_death = sum(death)) %>%
filter(event==14) %>%
ungroup()
death_prob2<- events_filtered %>%
group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
settings$event_stack_size <- 0
settings$agent_stack_size <- 0
library(epicUS)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e7
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
## making incidence and longevity 0
input$values$agent$l_inc_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0)))
input$values$agent$ln_h_bgd_betas <- t(as.matrix(c(intercept = 0, y = 0, y2 = 0, age = 0, b_mi = 0, n_mi = 0, b_stroke = 0,
n_stroke = 0, hf = 0)))
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
table(events$event)
# rounding down so we can create a group.
events <- events %>%
mutate(age_and_local = floor(age_at_creation))
age_info<-events %>%
group_by(age_and_local,female) %>%
summarise(count = n())
events_filtered<- events %>%
mutate(death= ifelse(event==13,1,0)) %>%
group_by(id) %>%
mutate(ever_death = sum(death)) %>%
filter(event==14) %>%
ungroup()
death_prob2<- events_filtered %>%
group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
colnames(death_prob) <- c("Age", "Male", "Female")
View(death_prob2)
library(epicUS)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(scales)
library(dplyr)
library(tidyr)
USSimulation <- read_csv("USSimulation.csv")
# USlifetables <- read_csv("USLifeTables.csv", col_names = FALSE) %>% mutate(across(everything(), as.numeric))
settings <- get_default_settings()
settings$record_mode <- 0
settings$n_base_agents <- settings$n_base_agents  # Ensure default setting
init_session(settings = settings)
input <- Cget_inputs()
time_horizon <- 56
input$values$global_parameters$time_horizon <- time_horizon
# input$values$agent$p_bgd_by_sex <- as.matrix(USlifetables)
input$values$agent$l_inc_betas <- c(-3.5,0.002,0.00001)
run(input = input$values)
output <- Cget_output_ex()
terminate_session()
epic_popsize_age <- data.frame(year = seq(2015, by = 1, length.out = time_horizon),
output$n_alive_by_ctime_age)
colnames(epic_popsize_age)[2:ncol(epic_popsize_age)] <- 1:(ncol(epic_popsize_age) - 1)
epic_popsize_age <- epic_popsize_age[, -(2:40)]
epic_popsize_age_long <- epic_popsize_age %>%
pivot_longer(!year, names_to = "age", values_to = "EPIC_popsize") %>%
mutate(age=as.integer(age))
validate_pop_size_scaled <- USSimulation %>%
rename(US_popsize = value) %>%
left_join(epic_popsize_age_long, by = c("year", "age")) %>%
mutate(EPIC_output_scaled = ifelse(year == 2015, US_popsize, NA))
total_epic_by_year <- validate_pop_size_scaled %>%
group_by(year) %>%
summarise(total_EPIC_output = sum(EPIC_popsize, na.rm = TRUE)) %>%
arrange(year) %>%
mutate(growth_rate = total_EPIC_output / lag(total_EPIC_output))
df_with_growth <- validate_pop_size_scaled %>%
left_join(total_epic_by_year, by = "year") %>%
arrange(year, age) %>%
group_by(age) %>%
mutate(
EPIC_output_scaled = ifelse(year == 2015, US_popsize, NA),
EPIC_output_scaled = replace_na(EPIC_output_scaled, first(US_popsize)) *
cumprod(replace_na(growth_rate, 1))
)
df_with_growth_age_grouped <- df_with_growth %>%
mutate(age_group = cut(age, breaks = c(seq(40, 100, by = 5), Inf),
include.lowest = TRUE, right = FALSE,
labels = c(paste(seq(40, 95, by = 5), seq(44, 99, by = 5), sep = "-"), "100+"))) %>%
mutate(age_group = factor(age_group,
levels = c("40-44", "45-49", "50-54", "55-59", "60-64", "65-69",
"70-74", "75-79", "80-84", "85-89", "90-94", "95-99", "100+"),
ordered = TRUE)) %>%
group_by(year, age_group) %>%
summarise(EPIC_output_scaled = sum(EPIC_output_scaled, na.rm = TRUE),
US_popsize = sum(US_popsize, na.rm = TRUE)) %>%
ungroup()
df_plot <- df_with_growth_age_grouped %>%
filter(year <= 2050, age_group == "40-44") %>%
select(year, US_popsize, EPIC_output_scaled, age_group) %>%
pivot_longer(cols = c(US_popsize, EPIC_output_scaled),
names_to = "Population_Type",
values_to = "Population")
p <- ggplot(df_plot, aes(x = year, y = Population, color = Population_Type)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +  # Points to highlight years
theme_tufte(base_size = 14, ticks = FALSE) +
ggtitle("Comparison of EPIC vs. US Population Over Time (Grouped by Age Ranges)") +
scale_y_continuous(name = "Population", labels = comma) +
scale_x_continuous(name = "Year", breaks = seq(min(df_plot$year), max(df_plot$year), by = 2)) +
theme(
legend.title = element_blank(),
legend.position = "bottom"
)+
facet_wrap(~ age_group)
# Display the plot
print(p)
df_plot2 <- df_with_growth_age_grouped %>%
filter(year <= 2050) %>%
select(year, US_popsize, EPIC_output_scaled, age_group) %>%
pivot_longer(cols = c(US_popsize, EPIC_output_scaled),
names_to = "Population_Type",
values_to = "Population")
unique_age_groups <- unique(df_plot2$age_group)
for (age in unique_age_groups) {
p <- ggplot(df_plot2 %>% filter(age_group == age),
aes(x = year, y = Population, color = Population_Type)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
theme_tufte(base_size = 14, ticks = FALSE) +
ggtitle(paste("EPIC vs. US Population Over Time for", age)) +
scale_y_continuous(name = "Population", labels = scales::comma) +
scale_x_continuous(name = "Year", breaks = seq(min(df_plot$year), max(df_plot$year), by = 2)) +
expand_limits(y=0) +
theme(legend.title = element_blank(), legend.position = "bottom")
print(p)
Sys.sleep(2)
}
library(epicUS)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(scales)
library(dplyr)
library(tidyr)
USSimulation <- read_csv("USSimulation.csv")
settings <- get_default_settings()
settings$record_mode <- 0
settings$n_base_agents <- settings$n_base_agents  # Ensure default setting
init_session(settings = settings)
input <- Cget_inputs()
time_horizon <- 20
input$values$global_parameters$time_horizon <- time_horizon
input$values$agent$l_inc_betas <- c(-3.5,0.002,0.00001)
input$values
input <- Cget_inputs()
View(input)
input <- Cget_inputs()
time_horizon <- 20
input$values$global_parameters$time_horizon
library(epicUS)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(scales)
library(dplyr)
library(tidyr)
USSimulation <- read_csv("USSimulation.csv")
settings <- get_default_settings()
settings$record_mode <- 0
settings$n_base_agents <- settings$n_base_agents  # Ensure default setting
init_session(settings = settings)
input <- Cget_inputs()
time_horizon <- 20
input$values$global_parameters$time_horizon <- time_horizon
input$values
input <- get_input()
View(input)
input <- get_input()
time_horizon <- 56
input$values$global_parameters$time_horizon <- time_horizon
input$values$agent$l_inc_betas <- c(-3.5,0.002,0.00001)
run(input = input$values)
output <- Cget_output_ex()
terminate_session()
epic_popsize_age <- data.frame(year = seq(2015, by = 1, length.out = time_horizon),
output$n_alive_by_ctime_age)
colnames(epic_popsize_age)[2:ncol(epic_popsize_age)] <- 1:(ncol(epic_popsize_age) - 1)
epic_popsize_age <- epic_popsize_age[, -(2:40)]
epic_popsize_age_long <- epic_popsize_age %>%
pivot_longer(!year, names_to = "age", values_to = "EPIC_popsize") %>%
mutate(age=as.integer(age))
validate_pop_size_scaled <- USSimulation %>%
rename(US_popsize = value) %>%
left_join(epic_popsize_age_long, by = c("year", "age")) %>%
mutate(EPIC_output_scaled = ifelse(year == 2015, US_popsize, NA))
total_epic_by_year <- validate_pop_size_scaled %>%
group_by(year) %>%
summarise(total_EPIC_output = sum(EPIC_popsize, na.rm = TRUE)) %>%
arrange(year) %>%
mutate(growth_rate = total_EPIC_output / lag(total_EPIC_output))
df_with_growth <- validate_pop_size_scaled %>%
left_join(total_epic_by_year, by = "year") %>%
arrange(year, age) %>%
group_by(age) %>%
mutate(
EPIC_output_scaled = ifelse(year == 2015, US_popsize, NA),
EPIC_output_scaled = replace_na(EPIC_output_scaled, first(US_popsize)) *
cumprod(replace_na(growth_rate, 1))
)
df_with_growth_age_grouped <- df_with_growth %>%
mutate(age_group = cut(age, breaks = c(seq(40, 100, by = 5), Inf),
include.lowest = TRUE, right = FALSE,
labels = c(paste(seq(40, 95, by = 5), seq(44, 99, by = 5), sep = "-"), "100+"))) %>%
mutate(age_group = factor(age_group,
levels = c("40-44", "45-49", "50-54", "55-59", "60-64", "65-69",
"70-74", "75-79", "80-84", "85-89", "90-94", "95-99", "100+"),
ordered = TRUE)) %>%
group_by(year, age_group) %>%
summarise(EPIC_output_scaled = sum(EPIC_output_scaled, na.rm = TRUE),
US_popsize = sum(US_popsize, na.rm = TRUE)) %>%
ungroup()
df_plot <- df_with_growth_age_grouped %>%
filter(year <= 2050, age_group == "40-44") %>%
select(year, US_popsize, EPIC_output_scaled, age_group) %>%
pivot_longer(cols = c(US_popsize, EPIC_output_scaled),
names_to = "Population_Type",
values_to = "Population")
p <- ggplot(df_plot, aes(x = year, y = Population, color = Population_Type)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +  # Points to highlight years
theme_tufte(base_size = 14, ticks = FALSE) +
ggtitle("Comparison of EPIC vs. US Population Over Time (Grouped by Age Ranges)") +
scale_y_continuous(name = "Population", labels = comma) +
scale_x_continuous(name = "Year", breaks = seq(min(df_plot$year), max(df_plot$year), by = 2)) +
theme(
legend.title = element_blank(),
legend.position = "bottom"
)+
facet_wrap(~ age_group)
# Display the plot
print(p)
df_plot2 <- df_with_growth_age_grouped %>%
filter(year <= 2050) %>%
select(year, US_popsize, EPIC_output_scaled, age_group) %>%
pivot_longer(cols = c(US_popsize, EPIC_output_scaled),
names_to = "Population_Type",
values_to = "Population")
unique_age_groups <- unique(df_plot2$age_group)
for (age in unique_age_groups) {
p <- ggplot(df_plot2 %>% filter(age_group == age),
aes(x = year, y = Population, color = Population_Type)) +
geom_line(linewidth = 1.2) +
geom_point(size = 2) +
theme_tufte(base_size = 14, ticks = FALSE) +
ggtitle(paste("EPIC vs. US Population Over Time for", age)) +
scale_y_continuous(name = "Population", labels = scales::comma) +
scale_x_continuous(name = "Year", breaks = seq(min(df_plot$year), max(df_plot$year), by = 2)) +
expand_limits(y=0) +
theme(legend.title = element_blank(), legend.position = "bottom")
print(p)
Sys.sleep(2)
}
library(epicR)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
init_session(settings = settings)
input <- get_input()
library(epicR)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
View(input)
library(epicR)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
library(epicR)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
init_session(settings = settings)
input$values$manual$explicit_mortality_by_age_sex <- cbind(male =c(rep(0,111)), female = c(rep(0,111)))
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
input$values$manual$explicit_mortality_by_age_sex <- cbind(male =c(rep(0,111)), female = c(rep(0,111)))
View(input)
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
input$exacerbation$logit_p_death_by_sex <- cbind(male = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0),
female = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0))
run(input = input$values)
library(epicR)
library(dplyr)
library(tidyr)
settings <- get_default_settings()
settings$record_mode <- 2
# settings$agent_stack_size <- 0
settings$n_base_agents <- 1e6
init_session(settings = settings)
input <- get_input()
# set time horizon
time_horizon <- 1
input$values$global_parameters$time_horizon <- time_horizon
input$values$manual$explicit_mortality_by_age_sex <- cbind(male =c(rep(0,111)), female = c(rep(0,111)))
input$exacerbation$logit_p_death_by_sex <- cbind(male = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0),
female = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0))
View(input)
input[["values"]][["exacerbation"]][["logit_p_death_by_sex"]]
input$exacerbation$logit_p_death_by_sex <- cbind(male = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0),
female = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0))
input$values$exacerbation$logit_p_death_by_sex <- cbind(male = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0),
female = c(intercept = -13000, age = log(1.05),  mild = 0, moderate = 0, severe = 7.4, very_severe = 8, n_hist_severe_exac = 0))
run(input = input$values)
events <- as.data.frame(Cget_all_events_matrix())
terminate_session()
## checking if the event has any 7
unique(events$event)
table(events$event)
# rounding down so we can create a group.
events <- events %>%
mutate(age_and_local = floor( age_at_creation))
age_info<-events %>%
group_by(id, age_and_local,female) %>%
summarise(count = n())
events_filtered<- events %>%
mutate(death= ifelse(event==13,1,0)) %>%
group_by(id) %>%
mutate(ever_death = sum(death)) %>%
filter(event==14) %>%
ungroup()
death_prob<- events_filtered %>%
group_by(age_and_local, female) %>%
summarise(
total_count = n(),
death_count = sum(ever_death==1),
death_probability = death_count / total_count
)
View(death_prob)
input$values$agent$p_bgd_by_sex
